#%%
########## Created by Sixun Tang @02252020 #########
########## This code serves to automatic download conference calls from Thomson One ###########
########## Output: PDFs, XLSs, and a collection of the number of file records ###########

import pynput
import time
from pynput import mouse as MS
from pynput import keyboard as KB
from pynput.keyboard import Key
import datetime
from datetime import timedelta
import pyperclip
import os
import numpy as np
import io

#### open keyboard and mouse Controller ####
KB_enter = pynput.keyboard.Controller()
MS_enter = pynput.mouse.Controller()

#### save directory (scripts and calls saved separately) #####
call_dir = r"C:\Users\jasonjia\Dropbox\ConferenceCall\Output\Pdf" # Previously known as CallScripts3
index_dir = r"C:\Users\jasonjia\Dropbox\ConferenceCall\Output\Xls" # Previously known as List3

print('done')
#%%
#---------------------------- Functions -------------------------------------#
##### click mouse function ####
def mouse_click(position,delay=0):
    MS_enter.position = position
    MS_enter.click(pynput.mouse.Button.left,1)
    if delay>0:
        time.sleep(delay)
##### double click mouse function ####
def mouse_doublec(position, delay=0):
    MS_enter.position = position
    MS_enter.click(pynput.mouse.Button.left,2)
    if delay>0:
        time.sleep(delay)
##### type string function ###
def key_strtype(e_string):
    KB_enter.type(e_string)
##### press key function ####
def key_press(key):
    KB_enter.press(key)
    KB_enter.release(key)
##### generate ideal time-window strings to be typed into date ####
def date_string(date_start, time_delta):
    global date_initial
    date_end = date_start - timedelta(days=1)
    date_begin = date_start - timedelta(days=time_delta)
    date_initial = date_begin
    return ['{0:02d}/{1:02d}/{2:02d}'.format(date_begin.month,date_begin.day,date_begin.year%100), '{0:02d}/{1:02d}/{2:02d}'.format(date_end.month,date_end.day,date_end.year%100), '{0}{1:02d}{2:02d}-{3}{4:02d}{5:02d}'.format(date_begin.year,date_begin.month,date_begin.day,date_end.year,date_end.month,date_end.day )]
##### generate ideal file name #####
def file_name(directory, name):
    return directory+'\\'+name
##### check if file is downloaded ####
def existing_file(directory, name, exten_name):
    full_name = name + exten_name
    if full_name in os.listdir(directory):
        return True
    else:
        return False

#%%
# -------------------------- mouse position, generated by mouse_key_recorder.py ------------------------ #
### Need to reset screen to 100% ###
### Jason's settings: Hide bookmarks bar, De-select 'show tabs on a separate row'###

#### mouse click list one: put start date and end date for each loop
#### 1: click start date  2: erase start date  3: click end date  4: erase end date 5: get the number of reports being searched
mouse_c_list_1_initial = [(381, 373), (428, 376), (541, 375), (584, 378), (146,788)]
#### Sixun's list: [(381, 373), (428, 376), (541, 375), (584, 378), (146,788)] ###[(397, 459), (426, 462), (543, 454), (584, 454)]
#### Jason's list: [(381, 400), (428, 400), (541, 400), (584, 400), (146, 810)]

### For you to adjust, based on your computer screen size!
mouse_c_adj = (0,-20)
# (10,22)

mouse_c_list_1 = [(381+mouse_c_adj[0], 373+mouse_c_adj[1]),
                  (428+mouse_c_adj[0], 376+mouse_c_adj[1]), 
                  (541+mouse_c_adj[0], 375+mouse_c_adj[1]), 
                  (584+mouse_c_adj[0], 378+mouse_c_adj[1]), 
                  (146+mouse_c_adj[0],788+mouse_c_adj[1])]

# Code to be worked on later
# mouse_c_list_1_draft = mouse_c_list_1for i in range(len(mouse_c_list_1)-1):
#    mouse_c_list_1_draft[i][0] = int(mouse_c_list_1[i][0]) + int(mouse_c_list_1_adjustment[0])
#    mouse_c_list_1_draft[i][1] = int(mouse_c_list_1[i][1]) + int(mouse_c_list_1_adjustment[1])

 #   tuple(map(sum, zip(test_tup1, test_tup2)))
    
    
#### 2: steps are described in the main loop
#### [0]: select all reports, [4]: click on view icon, [5] & [6]: click select and view icon,  
#### [1][0] and [1][1]: different locations of the excel icon, [2]: save, [3]: save as
#### [7]: de-select reports, [8] next page

mouse_c_list_2_initial = [(32, 852), [(1678, 788),(1712, 788)], (1315, 1019), (1348, 992), (56, 819), (557, 321), (554, 764), (32, 852), (1854, 786)]
mouse_c_list_2 = [(32+mouse_c_adj[0], 852+mouse_c_adj[1]), 
                  [(1678+mouse_c_adj[0]-382, 788+mouse_c_adj[1]),
                   (1712+mouse_c_adj[0]-382, 788+mouse_c_adj[1])], 
                  (1315+mouse_c_adj[0]-185, 1019+mouse_c_adj[1]-165),
                  (1348+mouse_c_adj[0]-185, 992+mouse_c_adj[1]-155), 
                  (56+mouse_c_adj[0], 819+mouse_c_adj[1]), 
                  (557+mouse_c_adj[0]-190, 321+mouse_c_adj[1]-70), 
                  (554+mouse_c_adj[0]-190, 764+mouse_c_adj[1]-70), 
                  (32+mouse_c_adj[0], 852+mouse_c_adj[1]), 
                  (1854+mouse_c_adj[0]-380, 786+mouse_c_adj[1])]

### [(29, 941), (2360, 871), (2011, 1316), (2071, 1279), (57, 907), (888, 522), (890, 971),(1197,214), (1344, 176), (31, 941), (2496, 875)]

#### Sixun's list: = [(32, 852), [(1678, 788),(1712, 788)], (1315, 1019), (1348, 992), (56, 819), (557, 321), (554, 764), (32, 852), (1854, 786)] 

#%%
# --------------------------- Main loop start ------------------------------- #
### set initial date ###
date_initial = datetime.date(year=2021, month=9, day=22)

### open file record recorder ###
record_file = open("C:\\Users\\jasonjia\\Dropbox\\ConferenceCall\\Output\\file_number.txt", "w", encoding="utf-8", errors="ignore")
print("Start date\tEnd date\tNo. Reports", file=record_file)

### two variables for error catching ####
click_time = 0
error_time = 0


#%%
########### Main Loop ####################

### Note: Before you run the code, start from the 
### Thomson One -> Screening and Analysis, 'Research' Page.
### Leave date untouched, but set the contributer to Refinitiv Streetevents.


# Type in contributor - Refinitiv Streetevents
time.sleep(1)
mouse_click((302+mouse_c_adj[0],120+mouse_c_adj[1]),1) ### research
mouse_click((99+mouse_c_adj[0],626+mouse_c_adj[1]),0.5) ### contributor
key_strtype("STREETEVENTS")
time.sleep(1)
mouse_click((93+mouse_c_adj[0],669+mouse_c_adj[1]),0.5)

                
while date_initial > datetime.date(year=2020, month=9, day=30):   ### end time ###
    ########### This error handler is to deal with damaged pages ################
    if error_time >= 500 and click_time>=0:
        if error_time >= 700:
            print("The date %s to %s, page %d is damaged"%(date_list[0], date_list[1], click_time+1)) # give this message and try next page
            click_time = click_time + 1
        if click_time>=report_page:
            click_time = 0
            error_time = 0
    elif error_time >= 3500 and click_time==-1:
        print("break point! Stop now")
        break
    
    ############ Generate a new 4-day time-window if no error occurs and the previous pages are finished  ########
    if click_time==0 and error_time==0:
        date_list = date_string(date_initial,4)
    ##### type in start date, and end date #####
        print('New 4-day window:', date_list[2])
        mouse_click(mouse_c_list_1[0],0.5)
        mouse_click(mouse_c_list_1[1],0.5)
        key_strtype(date_list[0])
        time.sleep(0.5)
        mouse_click(mouse_c_list_1[2],0.5)
        mouse_click(mouse_c_list_1[3],0.5)
        key_strtype(date_list[1])
        time.sleep(0.5)
        
    #### search ####
    key_press(Key.enter) ### search results displayed for the time period
    #### wait for the results to display ####
    time.sleep(3)
    
    # get the number of reports being searched (double click and Ctrl+C)
    print('Get number of reports')
    mouse_doublec(mouse_c_list_1[4],0.5)
    ## copy the number
    with KB_enter.pressed(Key.ctrl):
        key_press('c')
    time.sleep(0.5)
    ### read from clipboard the copied number
    report_number = pyperclip.paste()
    try:
        report_number = int(report_number)
        print("%s\t%s\t%d"%(date_list[0],date_list[1],report_number), file=record_file)
    except ValueError: ### if no number is copied, either "no queries found" or the system is logged off automatically, so retype the website address and redo from the break point ####
        if report_number=="query":
            report_number = 0
            print('no queries found')
            print("%s\t%s\t%d"%(date_list[0],date_list[1],report_number), file=record_file)
        else:
            print('number of reports logging in?')
            mouse_click((1862,546),2)  ##### click random place to show the main page 
            mouse_click((291,44),2)  #### click the website input
            key_strtype(r"http://proxy.uchicago.edu/login/thomsonone") #### type in website
            time.sleep(0.5)
            key_press(Key.enter)
            time.sleep(5)
            #### now we have to go back to search screen #####
            print(1)
            mouse_click((644+mouse_c_adj[0],95+mouse_c_adj[1]),2) # Screen Analysis # Sixun: mouse_click((644,95),2)
            print(2)
            mouse_click((302+mouse_c_adj[0],120+mouse_c_adj[1]),10)
            print(3)
            mouse_click((99+mouse_c_adj[0],626+mouse_c_adj[1]),2)
            ## type in source - Refinitiv Streetevents
            key_strtype("STREETEVENTS")
            time.sleep(3)
            print(4)
            mouse_click((93+mouse_c_adj[0],669+mouse_c_adj[1]),3)
            click_time = -1 #### this suggests that we do not need to move to a new time-window, but continue from current page
            continue

    pyperclip.copy("")
    ##### calculate the pages #####
    print('calculating pages')
    if report_number%50!=0:
        report_page = report_number//50 + 1
    else:
        report_page = report_number//50
    ###### Though we have this, the largest time-window has 1,962 reports ####
    if report_page>40:
        print("%d pages for date %s to %s"%(report_page, date_list[0],date_list[1]))
        report_page = 40
    ###### for each page, loop #####
    for loop_time in range(report_page):
        #### if we stop from some pages, for the first loops, just click next page #####
        #### i.e., if we stop from page 3, when we are back, click_time = 2, so when loop_time = 0,1 , click next page times and we are on page 3, then start to download ###
        if loop_time < click_time:
            print('going back to the page where we left off previously')
            ### click next page ####
            mouse_click(mouse_c_list_2[8], 5) 
            continue
        ## page_number here(for rename)
        order_num = str(loop_time+1)
        ### select all reports
        print('selecting all reports')
        mouse_click(mouse_c_list_2[0], 1)


        ### get the pdf first ###
        #### check first whether it is already
        f_file = date_list[2]+'_'+order_num
        f_name = file_name(call_dir, f_file)
        if not existing_file(call_dir,f_file,".pdf"):
            ## judge whether the file is downloaded by comparing the number of files ###
            file_num1 = len(os.listdir(call_dir))
            file_num2 = file_num1
            print('compare number of files to see if file is downloaded')
            ## i. Click on the View icon
            mouse_click(mouse_c_list_2[4],3)
            ## ii. Click the select and view icon
            mouse_click(mouse_c_list_2[5],1)
            mouse_click(mouse_c_list_2[6],6) #15
            with KB_enter.pressed(Key.cmd):
                key_press(Key.up)
            time.sleep(1)            
            mouse_click((1445,140),0.5) # newly added - for IE's popup
            mouse_click((1445,180),0.5) # newly added - for IE's popup
            mouse_click((1445,155),0.5) # newly added - for IE's popup
            mouse_click((1445,195),0.5) # newly added - for IE's popup
            time.sleep(1)
            
            ### start the time calculator before the loop ####
            start_time = time.time()
            
            ## if no new file is downloaded, keep rerunning the process ##
            while file_num2==file_num1:
            ## iii. Wait for the report to come out, type shift + ctrl + s to save
               # with KB_enter.pressed(Key.shift, Key.ctrl):
               #     key_press('s')
                print('trying to save file')
                ## iv. Type the file name
                key_strtype(f_name)
                time.sleep(0.5)
                key_press(Key.enter)
                time.sleep(5)
            ## see if there is a new file there, if not, continue to do this loop
                file_num2 = len(os.listdir(call_dir))
                ### calculate the end time for each loop
                end_time = time.time()
                # Error handle: if inactivity logout or other errors which lead this loop to a long time, need to restart the procedure and do everything
                if end_time - start_time>=200 and file_num2==file_num1: 
                    #### cumulative error_time
                    error_time = error_time + end_time - start_time
                    print('inactivity logout')
                    break

            ## handle error logout
            if end_time - start_time>=200 and file_num2==file_num1:
                print('error logout >=200')
                mouse_click((1862+mouse_c_adj[0],546+mouse_c_adj[1]),2)  ##### click random place to show the main page 
                mouse_click((291+mouse_c_adj[0],44+mouse_c_adj[1]),2)  #### click the website input
                key_strtype(r"http://proxy.uchicago.edu/login/thomsonone") #### type in website
                time.sleep(0.5)
                key_press(Key.enter)
                time.sleep(10)
                #### now we have to click to to search screen
                mouse_click((644+mouse_c_adj[0],95+mouse_c_adj[1]),2) ### screen analysis
                mouse_click((302+mouse_c_adj[0],120+mouse_c_adj[1]),10) ### research
                mouse_click((99+mouse_c_adj[0],626+mouse_c_adj[1]),2) ### contributor
                ## type in source - Refinitiv Streetevents
                key_strtype("STREETEVENTS")
                time.sleep(3)
                mouse_click((93+mouse_c_adj[0],669+mouse_c_adj[1]),3)
                click_time = loop_time ### save current page
                break  

            ## v. Close the window by typing Alt+F4 (if successful, close the inner and outer window) ######
            print('closing the window')
            with KB_enter.pressed(Key.alt):
                key_press(Key.f4)
            time.sleep(1)
            with KB_enter.pressed(Key.alt):
                key_press(Key.f4)

            mouse_click((1862+mouse_c_adj[0],546+mouse_c_adj[1]),2)
            ### reset error_time for a successful download of pdf ####
            error_time = 0


        ### get the excel(maybe at multiple locations and as a result, we must try multiple positions)

        ## i. Click on the excel icon
        #### check if the name saved is already there
        print('get the excel')
        f_name = file_name(index_dir, f_file)
        if not existing_file(index_dir, f_file, ".xls"):
            #### here the logic is like the error handler above 
            start_time = time.time()
            while not existing_file(index_dir, f_file, ".xls"):
                ### different locations of excel icon
                if report_number>50:
                    time.sleep(1)
                    mouse_click(mouse_c_list_2[1][0],0.5)
                else:
                    mouse_click(mouse_c_list_2[1][1],0.5)
                ## ii. Select save annd save as
                time.sleep(1)
                mouse_click(mouse_c_list_2[2],0.5)
                mouse_click(mouse_c_list_2[3],1)
                ## iii. Enter the name of the excel and save it
                key_strtype(f_name)
                time.sleep(0.5)
                key_press(Key.enter)
                time.sleep(1)
                ### cancel and redo
                # mouse_click((1424+mouse_c_adj[0],1020+mouse_c_adj[1]),3) ### delete the pop-up window
                end_time = time.time()
                print('excel saved')
                if end_time - start_time>=200 and not existing_file(index_dir, f_file, ".xls"): # if inactivity logout, need to restart the procedure and do everything
                    error_time = error_time + end_time - start_time
                    print('error time here >200')
                    break
        
            if end_time - start_time>=200 and not existing_file(index_dir, f_file, ".xls"):
                mouse_click((1862,546),2)
                mouse_click((291,44),2)
                key_strtype(r"http://proxy.uchicago.edu/login/thomsonone")
                time.sleep(0.5)
                key_press(Key.enter)
                time.sleep(10)
                #### now we have to click to to search screen
                mouse_click((644+mouse_c_adj[0],95+mouse_c_adj[1]),2)
                mouse_click((302+mouse_c_adj[0],120+mouse_c_adj[1]),10)
                mouse_click((99+mouse_c_adj[0],626+mouse_c_adj[1]),2)
                ## type in source
                key_strtype("STREETEVENTS")
                time.sleep(3)
                mouse_click((93+mouse_c_adj[0],669+mouse_c_adj[1]),3)
                click_time = loop_time ### save current page
                break  
        
        print('going to next page')
        ### dis select the reports
        mouse_click(mouse_c_list_2[7], 1)
        ### next page
        mouse_click(mouse_c_list_2[8], 2.5)   
        
        #### reset click_time
        click_time = 0
        ### reset error_time
        error_time = 0


record_file.close()


# %%
